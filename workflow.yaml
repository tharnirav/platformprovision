main:
  params: [input]
  steps:
    - createProjectStep:
        call: http.get
        args:
          url: https://us-central1-jp-poc-platform.cloudfunctions.net/create_project
          query:
            projectName: ${input.projectName}
            env: ${input.env}
            sealId: ${input.sealId}

        result: projectResponse
    - logStep:
        call: sys.log
        args:
          text: ${projectResponse.body.projectId}
          severity: DEBUG
    - assignVarStep:
        assign:
          - projectId: ${projectResponse.body.projectId}
          - exec_id: ${sys.get_env("GOOGLE_CLOUD_WORKFLOW_EXECUTION_ID")}
          - database_root: ${"projects/" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + "/databases/(default)/documents/workflowstatus/"}
    - store_metadata:
        call: googleapis.firestore.v1.projects.databases.documents.patch
        args:
          name: ${database_root + exec_id}
          updateMask:
            fieldPaths: ['projectId', 'status']
          body:
            fields:
              projectId:
                stringValue: ${projectId}
              status:
                stringValue: 'INPROGRESS'
        result: metadata
    - conditionalSwitch:
        switch:
          - condition: ${input.createBucket == true}
            next: createBucketStep
          - condition: ${input.needApproval == true}
            next: create_callback
        next: returnOutputStep
    - createBucketStep:
        try:
          call: http.get
          args:
            url: https://us-central1-jp-poc-platform.cloudfunctions.net/create_bucket
            query:
              projectId: ${projectId}
          result: bucketResponse
        except:
          as: e
          steps:
            - assign_status_as_failed:
                assign:
                  - status: "FAILED"
                next: store_status
        next: returnOutputStep
    - create_callback:
        call: events.create_callback_endpoint
        args:
          http_callback_method: "POST"
        result: callback_details
    - log_callback_details:
        call: sys.log
        args:
          severity: "INFO"
          text: ${"Listening for callbacks on " + callback_details.url}
    - await_callback:
        call: events.await_callback
        args:
          callback: ${callback_details}
          timeout: 3600
        result: callback_request
    - print_callback_request:
        call: sys.log
        args:
          severity: "INFO"
          text: ${"Received " + json.encode_to_string(callback_request.http_request)}
    - assign_status:
        assign:
          - status: ${callback_request.http_request.body.status}
    - log_status:
        call: sys.log
        args:
          severity: "INFO"
          text: ${"Callbacks on " + callback_details.url + " is " + status}
    - store_status:
        call: googleapis.firestore.v1.projects.databases.documents.patch
        args:
          name: ${database_root + exec_id}
          updateMask:
            fieldPaths: ['status']
          body:
            fields:
              projectId:
                stringValue: ${projectId}
              status:
                stringValue: ${status}
        result: metadata
    - returnOutputStep:
        return:
          projectId: ${projectId}
          status: ${status}
